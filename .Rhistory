z = readLines('http://www.google.com/search?q=introduction+to+r')
z
ls()
pf = read.delim("pseudo_facebook.tsv")
load("~/Documents/Learning/Online/Udacity/Exploratory/Lecture4.RData")
?with
?corr.test
??corr.test
corr.test(pf$www_likes_received, pf$likes_received)
library(ggplot)
library("ggplot2")
corr.test(pf$www_likes_received, pf$likes_received)
corr(pf$www_likes_received, pf$likes_received)
cor.test(pf$www_likes_received, pf$likes_received)
install.package('alr3')
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
save.image("~/Documents/Learning/Online/Udacity/Exploratory/Lecture4.1.RData")
clear()
install.packages(c("BH", "boot", "car", "cluster", "codetools", "dplyr", "KernSmooth", "labeling", "Lahman", "MASS", "mgcv", "nlme", "Rcpp"))
library(ggplot2)
data(diamonds)
summary(diamonds)
ggplot(data=diamonds, aes(x=x, y=price)) + geom_line()
ggplot(data=diamonds, aes(x=x, y=price))
ggplot(data=diamonds, aes(x=x, y=price)) + geom_point()
corr(diamonds$price, diamonds$x)
cor(diamonds$price, diamonds$x)
cor(diamonds$price, diamonds$y)
cor(diamonds$price, diamonds$z)
ggplot(data=diamonds, aes(x=depth, y=price)) + geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continously(breaks=2)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2)
help(scale_x_continuous)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2:10)
summary(diamonds$deptch)
summary(diamonds$detch)
summary(diamonds$depth)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2:80)
c(2,80,2)
2:80
2:80:2
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2*2:10)
2*1:80
2*1:40
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2*1:40)
cor(diamonds$deptch, diamonds$price)
cor(diamonds$depth, diamonds$price)
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2*1:40)
ggplot(data = d[diamonds$price < quantile(diamonds$price, 0.99)], aes(x = carat, y = price)) +
geom_point(alpha=1/100) + scale_x_continuous(breaks=2*1:40)
d[diamonds$price < quantile(diamonds$price, 0.99)]
d = diamonds[diamonds$price < quantile(diamonds$price, 0.99)]
d = diamonds[price < quantile(diamonds$price, 0.99)]
d = diamonds[price < quantile(diamonds$price, 0.99), ]
d = diamonds[diamonds$price < quantile(diamonds$price, 0.99), ]
d
ggplot(data = d, aes(x = carat, y = price)) +
geom_point()
d = diamonds[diamonds$price < quantile(diamonds$price, 0.99), ]
diamonds$volume = diamonds$x * diamonds$y * diamonds$z
ggplot(data=dimonds, aes(x= volue, y = price)) + geom_point()
ggplot(data=diamonds, aes(x= volue, y = price)) + geom_point()
ggplot(data=diamonds, aes(x= volume, y = price)) + geom_point()
d = diamonds[diamonds$volume > 0, ]
d = d[d$volume < 800, ]
cor(d$volue, d$price)
cor(d$volume, d$price)
require(ggplot2)
ggplot(data=d, aes(x= volume, y = price)) + geom_point(alpha=1/100) + geom_smooth(method="lm", formula = y~x, size = 1)
summary(d)
ggplot(data=d, aes(x= volume, y = price)) + geom_point(alpha=1/100) + geom_smooth(method="lm", formula = y~x, size = 1)
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
head(diamonds)
diamondsByClarity = select(diamonds, mean_price, median_price, min_price, max_price,n)
group_by(diamonds, clarity)
suppressMessages(library(ggplot2))
library(ggplot2)
package
package.load(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
data(diamonds)
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages(dplyr)
library(dplyr)
library
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p1 = ggplot(diamonds_mp_by_clarity, aes(x = clarity , y = mean_price)) + geom_bar()
p2 = ggplot(diamonds_mp_by_color, aes(x = color, y = mean_price)) + geom_bar()
install.packages("gridExtras")
install.packages("gridExtras")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2)
p1 = ggplot(diamonds_mp_by_clarity, aes(x = clarity , y = mean_price)) + geom_bar()
p1
head(diamonds_mp_by_clarity)
setwd("~/Documents/Learning/Online/Udacity/Nanodegree/Visualization")
